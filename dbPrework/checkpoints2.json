[
    {
        "checkpoint": 1,
        "welcome": "Welcome to checkpoint 1",
        "quiz": {
            "title": "Intro to Console/Bash - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "How to create a file",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 2,
                    "description": "How to get the list of files in the current directory",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 3,
                    "description": "How to move to another folder",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 4,
                    "description": "How to delete a folder",
                    "curriculum": "From class discussion and https://en.wikipedia.org/wiki/Rmdir"
                },
                {
                    "number": 5,
                    "description": "How to create a directory",
                    "curriculum": "From  Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 6,
                    "description": "How to check the name of the current directory",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 7,
                    "description": "How to delete a file",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 8,
                    "description": "How to autocomplete a partial filename",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 9,
                    "description": "How to move to the home directory",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 10,
                    "description": "How to create multiple files at once",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 11,
                    "description": "How to open a file on a mac",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 12,
                    "description": "How to open a file on a PC",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 13,
                    "description": "How to move up one directory",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 14,
                    "description": "How to open a folder on a pc",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 15,
                    "description": "How to open a folder on a mac",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 16,
                    "description": "How to list the files one folder up",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                },
                {
                    "number": 17,
                    "description": "How to rename a file",
                    "curriculum": "From class discussion https://en.wikipedia.org/wiki/Mv"
                },
                {
                    "number": 18,
                    "description": "How to make a copy of a file",
                    "curriculum": "From class discussion https://en.wikipedia.org/wiki/Cp_(Unix)"
                },
                {
                    "number": 19,
                    "description": "How to delete a file one folder up",
                    "curriculum": "From Week 1 Activity 1 commands cheatsheet"
                }
            ]
        }
    },
    {
        "checkpoint": 2,
        "welcome": "Welcome to checkpoint 2",
        "quiz": {
            "title": "HTML/CSS/Git - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "HTML acronym",
                    "curriculum": "From Week 1 Day 2 Gitn_Pro_HTML_CSS powerpoint slide 55"
                },
                {
                    "number": 2,
                    "description": "How to create a link in html",
                    "curriculum": "From Week 1 Day 2 Gitn_Pro_HTML_CSS powerpoint slide 45"
                },
                {
                    "number": 3,
                    "description": "Largest sized header",
                    "curriculum": "From Week 1 Day 2 Gitn_Pro_HTML_CSS powerpoint slide 47"
                },
                {
                    "number": 4,
                    "description": "Tag for an image element",
                    "curriculum": "From Week 1 Day 2 Gitn_Pro_HTML_CSS powerpoint slide 46"
                },
                {
                    "number": 5,
                    "description": "CSS acronym",
                    "curriculum": "From Week 1 Day 2 Gitn_Pro_HTML_CSS powerpoint slide 55"
                },
                {
                    "number": 6,
                    "description": "Connecting a CSS file to an HTML file",
                    "curriculum": "From Week 1 Day 2 part time lesson plan section 17"
                },
                {
                    "number": 7,
                    "description": "Styling elements in CSS",
                    "curriculum": "From Week 1 Day 2 Gitn_Pro_HTML_CSS powerpoint slide 62"
                },
                {
                    "number": 8,
                    "description": "Class names in CSS",
                    "curriculum": "From Week 1 Day 2 Gitn_Pro_HTML_CSS powerpoint slide 63"
                },
                {
                    "number": 9,
                    "description": "ID names in CSS",
                    "curriculum": "From Week 1 Day 2 Gitn_Pro_HTML_CSS powerpoint slide 63"
                },
                {
                    "number": 10,
                    "description": "Calculating element size using box model",
                    "curriculum": "From Week 1 Day 3 Heroes_of_CSS powerpoint slide 30"
                },
                {
                    "number": 11,
                    "description": "Elements that block by default",
                    "curriculum": "From Week 1 Day 3 Heroes_of_CSS powerpoint slide 35"
                },
                {
                    "number": 12,
                    "description": "Using float to align block elements",
                    "curriculum": "From Week 1 Day 3 Heroes_of_CSS powerpoint slide 36"
                },
                {
                    "number": 13,
                    "description": "Relative positioning",
                    "curriculum": "From Week 1 Day 3 Heroes_of_CSS powerpoint slide 53"
                },
                {
                    "number": 14,
                    "description": "Using z-index to layer elements",
                    "curriculum": "From Week 1 Day 3 Heroes_of_CSS powerpoint slide 56"
                },
                {
                    "number": 15,
                    "description": "Absolute positioning",
                    "curriculum": "From Week 1 Day 3 Heroes_of_CSS powerpoint slide 54"
                },
                {
                    "number": 16,
                    "description": "Hiding elements with display property",
                    "curriculum": "From Week 1 Day 3 Heroes_of_CSS powerpoint slide 57"
                },
                {
                    "number": 17,
                    "description": "Order of CSS precedence",
                    "curriculum": "From Week 2 Day 1 part time lesson plan section 10"
                },
                {
                    "number": 18,
                    "description": "Purpose of CSS resets",
                    "curriculum": "From Week 2 Day 1 part time lesson plan section 10"
                },
                {
                    "number": 19,
                    "description": "Precedence of ID and class attributes",
                    "curriculum": "From Week 2 Day 1 part time lesson plan section 10"
                },
                {
                    "number": 20,
                    "description": "Using pseudo-classes for specific states",
                    "curriculum": "From Week 2 Day 2 DownDirtyCSS powerpoint slide 27"
                },
                {
                    "number": 21,
                    "description": "Using CSS frameworks",
                    "curriculum": "From Week 2 Day 2 part time lesson plan section 18"
                },
                {
                    "number": 22,
                    "description": "Bootstrap grid container",
                    "curriculum": "From Week 2 Day 3 BeholdBootstrap powerpoint slide 58"
                },
                {
                    "number": 23,
                    "description": "Columns in a Bootstrap grid",
                    "curriculum": "From Week 2 Day 3 BeholdBootstrap powerpoint slide 58"
                },
                {
                    "number": 24,
                    "description": "Sizing Bootstrap columns",
                    "curriculum": "From Week 2 Day 3 BeholdBootstrap powerpoint slide 67"
                },
                {
                    "number": 25,
                    "description": "Using media queries for responsive design",
                    "curriculum": "From Week 2 Day 3 part time lesson plan section 23"
                },
                {
                    "number": 26,
                    "description": "Viewport tag",
                    "curriculum": "From Week 2 Day 3 BeholdBootstrap powerpoint slide 83"
                },
                {
                    "number": 27,
                    "description": "Reasons for using git",
                    "curriculum": "From Week 1 Day 2 Gitn_Pro_HTML_CSS powerpoint slide 18"
                },
                {
                    "number": 28,
                    "description": "Workflow pattern for committing code",
                    "curriculum": "From Week 1 Day 2 \"Steps to Upload to Github\" supplement"
                },
                {
                    "number": 29,
                    "description": "Deploying to GitHub pages",
                    "curriculum": "From Week 2 Day 1 part time lesson plan section 12"
                },
                {
                    "number": 30,
                    "description": "URL for published GitHub pages site",
                    "curriculum": "From Week 2 Day 1 part time lesson plan section 12"
                }
            ]
        }
    },
    {
        "checkpoint": 3,
        "welcome": "Welcome to checkpoint 3",
        "quiz": {
            "title": "JavaScript - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "Declaring variables with var",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 6"
                },
                {
                    "number": 2,
                    "description": "Common variable types - strings, booleans, numbers",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 6"
                },
                {
                    "number": 3,
                    "description": "Enclosing strings within quotes",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 6"
                },
                {
                    "number": 4,
                    "description": "Debugging with console.log",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 9"
                },
                {
                    "number": 5,
                    "description": "Adding string and number variables",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 12 and Week 3 activity 05-PizzaConsole and 10-ConditionalActivity2"
                },
                {
                    "number": 6,
                    "description": "Getting user input with prompts",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 14"
                },
                {
                    "number": 7,
                    "description": "Using document.write to write to a page directly",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 18"
                },
                {
                    "number": 8,
                    "description": "Primary purpose of if/else statements is to make decisions",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 19"
                },
                {
                    "number": 9,
                    "description": "Condition portion must be enclosed in parentheses",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 19"
                },
                {
                    "number": 10,
                    "description": "What array variables can store",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 24"
                },
                {
                    "number": 11,
                    "description": "Array elements are referenced by index",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 24"
                },
                {
                    "number": 12,
                    "description": "Using index to read value within an array",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 25"
                },
                {
                    "number": 13,
                    "description": "Getting a count of array elements with array.length",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 25"
                },
                {
                    "number": 14,
                    "description": "Repeat blocks of code with for loops",
                    "curriculum": "From Week 3 Day 2 part time lesson plan section 7"
                },
                {
                    "number": 15,
                    "description": "Comparing variables with equivalency check",
                    "curriculum": "From Week 3 Day 1 part time lesson plan section 4 and Week 3 activity 01-CodeDissection"
                },
                {
                    "number": 16,
                    "description": "Definition of iterator",
                    "curriculum": "From Week 3 Day 2 part time lesson plan section 9"
                },
                {
                    "number": 17,
                    "description": "Calculating the sum of elements in an array",
                    "curriculum": "From Week 3 Day 2 part time lesson plan section 9"
                },
                {
                    "number": 18,
                    "description": "Using document.onkeyup to hook into key release event",
                    "curriculum": "From Week 3 Day 2 part time lesson plan section 17"
                },
                {
                    "number": 19,
                    "description": "Using event.key to read key presses",
                    "curriculum": "From Week 3 Day 2 part time lesson plan section 17"
                },
                {
                    "number": 20,
                    "description": "Using document.getElementByID to target single element",
                    "curriculum": "From Week 3 Day 2 part time lesson plan section 17"
                },
                {
                    "number": 21,
                    "description": "Using the push method to add elements to an array",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 4 and Week 3 activity 25-LoopTV"
                },
                {
                    "number": 22,
                    "description": "Purpose of functions is to bundle code for repeated use",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 6"
                },
                {
                    "number": 23,
                    "description": "Definition of argument",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 6"
                },
                {
                    "number": 24,
                    "description": "Using charAt() method to get character within a string",
                    "curriculum": "From Week 3 activity 20-HardLoop and 24-Recap and 27-MyFirstFunctions"
                },
                {
                    "number": 25,
                    "description": "Using modulus and pushing values to an array",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 4 and Week 3 class discussion"
                },
                {
                    "number": 26,
                    "description": "What it means to call a function",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 6"
                },
                {
                    "number": 27,
                    "description": "Using toLowerCase() method to convert strings",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 19 and Week 3 activity 32-CarGame"
                },
                {
                    "number": 28,
                    "description": "Using Math.floor and Math.random",
                    "curriculum": "From Week 3 Day 2 part time lesson plan section 21 and Week 3 activity 23-RPS-Coded"
                },
                {
                    "number": 29,
                    "description": "Understanding variable scope within functions",
                    "curriculum": "From Week 3 Day 3 part time lession plan section 20"
                }
            ]
        }
    },
    {
        "checkpoint": 4,
        "welcome": "Welcome to checkpoint 4",
        "quiz": {
            "title": "More JavaScript and jQuery - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "Property-Value pairs are enclosed within curly brackets",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 16"
                },
                {
                    "number": 2,
                    "description": "Using bracket notation to refer to property value",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 11"
                },
                {
                    "number": 3,
                    "description": "Using dot notation to refer to property value",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 11"
                },
                {
                    "number": 4,
                    "description": "Using this to refer to the object itself",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 16"
                },
                {
                    "number": 5,
                    "description": "Definition of methods",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 16"
                },
                {
                    "number": 6,
                    "description": "Code example of method usage",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 16"
                },
                {
                    "number": 7,
                    "description": "Definition of global scope",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 20"
                },
                {
                    "number": 8,
                    "description": "Passing arguments to functions",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 6"
                },
                {
                    "number": 9,
                    "description": "Definition of forEach method",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 20"
                },
                {
                    "number": 10,
                    "description": "What is the DOM effectively?",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 4"
                },
                {
                    "number": 11,
                    "description": "Usage of the innerHTML property",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 5"
                },
                {
                    "number": 12,
                    "description": "Using JS to place a new div on the page with createElement",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 6"
                },
                {
                    "number": 13,
                    "description": "Using the appendChild JS method",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 6"
                },
                {
                    "number": 14,
                    "description": "Changing an element's CSS style with setAttribute JS method",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 5"
                },
                {
                    "number": 15,
                    "description": "Definition of jQuery",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 16,
                    "description": "Types of tasks that can be done with jQuery",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 8 and Week 4 Day 1 powerpoint jQueryBegins.pptx"
                },
                {
                    "number": 17,
                    "description": "Targeting a div with jQuery",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 9"
                },
                {
                    "number": 18,
                    "description": "Creating a button with jQuery",
                    "curriculum": "From Week 4 Day 2 part time lesson plan section 12"
                },
                {
                    "number": 19,
                    "description": "Using the jQuery append method",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 9"
                },
                {
                    "number": 20,
                    "description": "Iterating over an array with jQuery .each method",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 11"
                },
                {
                    "number": 21,
                    "description": "Using document.ready to wait for HTML to load",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 13"
                },
                {
                    "number": 22,
                    "description": "Using jQuery on.click to create listeners",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 13"
                },
                {
                    "number": 23,
                    "description": "Using jQuery .prepend method to attach to top of another element",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 19"
                },
                {
                    "number": 24,
                    "description": "$() is equivalent to jQuery()",
                    "curriculum": "From Week 4 Day 1 part time lesson plan section 9"
                },
                {
                    "number": 25,
                    "description": "Using jQuery .attr method to set data atttributes",
                    "curriculum": "From Week 4 Day 2 part time lesson plan section 12"
                },
                {
                    "number": 26,
                    "description": "Using jQuery .addClass method to give elements classes",
                    "curriculum": "From Week 4 Day 2 part time lesson plan section 12"
                },
                {
                    "number": 27,
                    "description": "Using the jQuery .text method",
                    "curriculum": "From Week 4 Day 2 part time lesson plan section 12"
                },
                {
                    "number": 28,
                    "description": "Scoping allows child functions to access parent variables",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 20"
                },
                {
                    "number": 29,
                    "description": "Window property of the browser",
                    "curriculum": "From Week 3 Day 3 part time lesson plan section 16, and Week 4 Day 1 part time lesson plan sections 4 and 5"
                }
            ]
        }
    },
    {
        "checkpoint": 5,
        "welcome": "Welcome to checkpoint 5",
        "quiz": {
            "title": "Timers and APIs - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "setTimeout runs code after specified amount of time",
                    "curriculum": "From Week 5 Day 2 part time lesson plan section 7"
                },
                {
                    "number": 2,
                    "description": "setInterval runs code periodically",
                    "curriculum": "From Week 5 Day 2 part time lesson plan section 12"
                },
                {
                    "number": 3,
                    "description": "Using clearTimeout to stop a previously set timer",
                    "curriculum": "From Week 5 Day 2 part time lesson plan section 7"
                },
                {
                    "number": 4,
                    "description": "Example of setInterval usage",
                    "curriculum": "From Week 5 Day 2 part time lesson plan section 12"
                },
                {
                    "number": 5,
                    "description": "setTimeout and setInterval are examples of callback functions",
                    "curriculum": "From Week 6 Day 1 part time lesson plan section 15"
                },
                {
                    "number": 6,
                    "description": "Definition of an algorithm",
                    "curriculum": "From Week 5 Day 3 part time lesson plan section 16"
                },
                {
                    "number": 7,
                    "description": "Application Program Interface",
                    "curriculum": "From Week 6 Day 1 part time lesson plan section 6"
                },
                {
                    "number": 8,
                    "description": "Asynchronous JavaScript and XML",
                    "curriculum": "From Week 6 Day 1 part time lesson plan section 15"
                },
                {
                    "number": 9,
                    "description": "Pass URL and GET method into AJAX to get data",
                    "curriculum": "From Week 6 Day 2 powerpoint API_AJAX.pptx slide 20"
                },
                {
                    "number": 10,
                    "description": "JavaScript Object Notation",
                    "curriculum": "From Week 6 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 11,
                    "description": "Uses for APIs",
                    "curriculum": "From Week 6 Day 2 powerpoint API_AJAX.pptx"
                },
                {
                    "number": 12,
                    "description": "Millions of APIs exist worldwide",
                    "curriculum": "From Week 6 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 13,
                    "description": "JSON is the common format for sending data between APIs",
                    "curriculum": "From Week 6 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 14,
                    "description": "Add parameters to URL to filder API results",
                    "curriculum": "From Week 6 Day 1 part time lesson plan section 11"
                },
                {
                    "number": 15,
                    "description": "Always refer to API documentation",
                    "curriculum": "From Week 6 Day 1 part time lesson plan section 11"
                },
                {
                    "number": 16,
                    "description": "Code example with API response",
                    "curriculum": "From Week 6 Day 1 part time lesson plan section 15"
                },
                {
                    "number": 17,
                    "description": ".done is promise to run code after something completed",
                    "curriculum": "From Week 6 Day 1 part time lesson plan section 10"
                },
                {
                    "number": 18,
                    "description": "JavaScript is synchronous by default",
                    "curriculum": "From Week 6 Day 1 part time lesson plan section 15"
                }
            ]
        }
    },
    {
        "checkpoint": 6,
        "welcome": "Welcome to checkpoint 6",
        "quiz": {
            "title": "Node - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "Definition of client and server",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 2"
                },
                {
                    "number": 2,
                    "description": "Definition of request and response",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 2"
                },
                {
                    "number": 3,
                    "description": "Purpose of Node is to allow JS outside of browser and on the server",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 3"
                },
                {
                    "number": 4,
                    "description": "Various advantages of using Node servers",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 3 and Week 10 Day 1 slideshow 01-Intro_node.pptx"
                },
                {
                    "number": 5,
                    "description": "Node uses asynchronous threading",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 3"
                },
                {
                    "number": 6,
                    "description": "`node filename.js` from the command line",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 5"
                },
                {
                    "number": 7,
                    "description": "A console log will display output in the bash/terminal window",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 6"
                },
                {
                    "number": 8,
                    "description": "process.argv is used to get command line arguments",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 7"
                },
                {
                    "number": 9,
                    "description": "Adding arguments using process.argv",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 10,
                    "description": "Parsing arguments into numbers",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 11,
                    "description": "Using require for modularization",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 16"
                },
                {
                    "number": 12,
                    "description": "Using dot notation to reference values from imported objects",
                    "curriculum": "From Week 10 Day 1 part time lesson plan section 16"
                },
                {
                    "number": 13,
                    "description": "Used for file interaction",
                    "curriculum": "From Week 10 Day 2 part time lesson plan section 3"
                },
                {
                    "number": 14,
                    "description": "Using fs to read a file then use data.split to parse the contents into a data array",
                    "curriculum": "From Week 10 Day 2 part time lesson plan section 8"
                },
                {
                    "number": 15,
                    "description": "Using the appendFile method of the fs Node package",
                    "curriculum": "From Week 10 Day 2 part time lesson plan section 10"
                },
                {
                    "number": 16,
                    "description": "Purpose of the Node Package Manager",
                    "curriculum": "From Week 10 Day 3 part time lesson plan section 5"
                },
                {
                    "number": 17,
                    "description": "Using npm install \\<packagename\\>",
                    "curriculum": "From Week 10 Day 2 part time lesson plan section 13"
                },
                {
                    "number": 18,
                    "description": "Where the actual JSON response data is located",
                    "curriculum": "From Week 10 Day 2 part time lesson plan section 14"
                },
                {
                    "number": 19,
                    "description": "Parsing a JSON string to construct the JS object",
                    "curriculum": "From Week 10 Day 2 part time lesson play section 14 and mozilla reference documentation on JSON.parse"
                },
                {
                    "number": 20,
                    "description": "Saving dependencies in package.json",
                    "curriculum": "From Week 10 Day 3 part time lesson plan section 13"
                },
                {
                    "number": 21,
                    "description": "Using npm init to create package.json",
                    "curriculum": "From Week 10 Day 3 part time lesson plan section 13"
                }
            ]
        }
    },
    {
        "checkpoint": 7,
        "welcome": "Welcome to checkpoint 7",
        "quiz": {
            "title": "Express - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "Definition of Server",
                    "curriculum": "From Express Powerpoint ServerSide.pptx, slide 13"
                },
                {
                    "number": 2,
                    "description": "Definition of a Client",
                    "curriculum": "From Express Powerpoint ServerSide.pptx, slide 18"
                },
                {
                    "number": 3,
                    "description": "Definition of Back-End",
                    "curriculum": "From Express Powerpoint ServerSide.pptx, slide 21"
                },
                {
                    "number": 4,
                    "description": "How request/response work",
                    "curriculum": "From Express Day-1 Part Time Lesson Plan"
                },
                {
                    "number": 5,
                    "description": "Examples of what a server does",
                    "curriculum": "From Express Powerpoint ServerSide.pptx, slide 15"
                },
                {
                    "number": 6,
                    "description": "Method of client-server communication",
                    "curriculum": "From Express Powerpoint ServerSide.pptx, slide 20"
                },
                {
                    "number": 7,
                    "description": "Modules that developers often code into a server",
                    "curriculum": "From Express Day-1 Part Time Lesson Plan, section 1"
                },
                {
                    "number": 8,
                    "description": "Definition of a port",
                    "curriculum": "From Express Day-1 Part Time Lesson Plan, section 2"
                },
                {
                    "number": 9,
                    "description": "Definition of a GET request",
                    "curriculum": "From Express Day-1 Part Time Lesson Plan"
                },
                {
                    "number": 10,
                    "description": "Definition of a POST request",
                    "curriculum": "From Express Day-1 Part Time Lesson Plan"
                },
                {
                    "number": 11,
                    "description": "Definition of Express",
                    "curriculum": "From Express Powerpoint ExpressYourself.pptx, slide 14"
                },
                {
                    "number": 12,
                    "description": "Express npm package usage",
                    "curriculum": "From Express Day-2 Part Time Lesson Plan"
                },
                {
                    "number": 13,
                    "description": "Requiring the express package",
                    "curriculum": "From Express Day-2 Part Time Lesson Plan"
                },
                {
                    "number": 14,
                    "description": "Using the express() function of the Express module",
                    "curriculum": "From Express Day-2 Part Time Lesson Plan and expressjs.com documentation"
                },
                {
                    "number": 15,
                    "description": "Purpose of the listen() method",
                    "curriculum": "From Express Day-2 Part Time Lesson Plan and expressjs.com documentation"
                },
                {
                    "number": 16,
                    "description": "Syntax for a route",
                    "curriculum": "From Express Day-2 Part Time Lesson Plan"
                },
                {
                    "number": 17,
                    "description": "Syntax for res.send",
                    "curriculum": "From Express Day-2 Part Time Lesson Plan"
                },
                {
                    "number": 18,
                    "description": "Using req.params to parse the URL",
                    "curriculum": "From Express Day-2 Part Time Lesson Plan, section 7 & 8"
                },
                {
                    "number": 19,
                    "description": "Using ? to make a parameter optional",
                    "curriculum": "From Express Day-2 Part Time Lesson Plan, section 4"
                },
                {
                    "number": 20,
                    "description": "Definition of middleware",
                    "curriculum": "From Express Day-2 Part Time Lesson Plan, section 14"
                },
                {
                    "number": 21,
                    "description": "Definition of __directory keyword in Node",
                    "curriculum": "From Express Day-2 Part Time Lesson Plan, section 17"
                }
            ]
        }
    },
    {
        "checkpoint": 8,
        "welcome": "Welcome to checkpoint 8",
        "quiz": {
            "title": "MySQL and SQL Queries - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "SQL stands for Structured Query Language",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 2"
                },
                {
                    "number": 2,
                    "description": "MySQL runs on the server while MySQL Workbench and Sequel Pro are client implementations",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 2 and 3"
                },
                {
                    "number": 3,
                    "description": "New databases can be made with CREATE DATABASE databasename;",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 7"
                },
                {
                    "number": 4,
                    "description": "Databases store data in tables made up of columns",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 5,
                    "description": "USE is used to select a database to work on",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 6,
                    "description": "New tables can be made with CREATE TABLE ();",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 7,
                    "description": "NOT NULL constraint prevents empty fields",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 8,
                    "description": "VARCHAR data type used for specifying column holding variable length strings",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 9,
                    "description": "INTEGER data type used for specifying column holding whole numbers",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 10,
                    "description": "DEFAULT constraint sets a default column value",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 10"
                },
                {
                    "number": 11,
                    "description": "INSERT INTO statement used to add data to tables",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 12"
                },
                {
                    "number": 12,
                    "description": "Specific data that is being added is preceeded by VALUES keyword",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 12"
                },
                {
                    "number": 13,
                    "description": "Re-running the same insert statement will create a duplicate record",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 12"
                },
                {
                    "number": 14,
                    "description": "Data in a table can be changed with the UPDATE statement",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 12"
                },
                {
                    "number": 15,
                    "description": "SET keyword used to specify column and new value in an update",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 12"
                },
                {
                    "number": 16,
                    "description": "WHERE necessary when updating to prevent all records being modified",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 12"
                },
                {
                    "number": 17,
                    "description": "DELETE FROM statement used to remove data from tables",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 14"
                },
                {
                    "number": 18,
                    "description": "GROUP BY statement used to group elements with shared values",
                    "curriculum": "From Week 12 Day 3 part time lesson plan section 9"
                },
                {
                    "number": 19,
                    "description": "BETWEEN operator used to select range of values",
                    "curriculum": "From Week 12 Day 3 part time lesson plan section 9"
                },
                {
                    "number": 20,
                    "description": "Each row identifiable by unique primary key",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 14"
                },
                {
                    "number": 21,
                    "description": "To automatically generate a unique integer to use as an ID",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 17"
                },
                {
                    "number": 22,
                    "description": "Joins can be used to combine data from different tables with a shared value",
                    "curriculum": "From Week 12 Day 1 part time lesson plan section 17"
                },
                {
                    "number": 23,
                    "description": "Requires user name, password, host, and database name",
                    "curriculum": "From Week 12 Day 2 part time lesson plan section 2"
                },
                {
                    "number": 24,
                    "description": "Database must first be created before connection attempt",
                    "curriculum": "From Week 12 Day 2 part time lesson plan section 3"
                },
                {
                    "number": 25,
                    "description": "SQL query is included in connection.query method",
                    "curriculum": "From Week 12 Day 2 part time lesson plan section 4"
                },
                {
                    "number": 26,
                    "description": ".query is place in .connect callback so query runs after connection is made",
                    "curriculum": "From Week 12 Day 2 part time lesson plan section 4"
                },
                {
                    "number": 27,
                    "description": "Response data to connection.query is an array of objects",
                    "curriculum": "From Week 12 Day 2 part time lesson plan section 4"
                },
                {
                    "number": 28,
                    "description": "Create Read Update Delete",
                    "curriculum": "From Week 12 Day 2 part time lesson plan section 7"
                },
                {
                    "number": 29,
                    "description": "schema.sql and seeds.sql for storing database and data startup code",
                    "curriculum": "From Week 12 Day 3 part time lesson plan section 3"
                }
            ]
        }
    },
    {
        "checkpoint": 9,
        "welcome": "Welcome to checkpoint 9",
        "quiz": {
            "title": "Mongo - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "MongoDB is a very popular noSQL database",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 3"
                },
                {
                    "number": 2,
                    "description": "MongoDB stores data in BSON format",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 3"
                },
                {
                    "number": 3,
                    "description": "Collections of Documents make up a MongoDB database",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 3"
                },
                {
                    "number": 4,
                    "description": "For MongoDB to be running, mongod must be running",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 7"
                },
                {
                    "number": 5,
                    "description": "The use command is used in mongo shell to select a database",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 6,
                    "description": "The db command is used in mongo shell to see selected database",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 7,
                    "description": "The insert method is used to add documents",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 8,
                    "description": "The find method is used to query a mongo database",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 8"
                },
                {
                    "number": 9,
                    "description": "The update method is used to modify a document",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 11"
                },
                {
                    "number": 10,
                    "description": "The remove method is used to delete documents",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 11"
                },
                {
                    "number": 11,
                    "description": "The drop method is used to remove collections",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 11"
                },
                {
                    "number": 12,
                    "description": "The dropDatabase is used to remove databases",
                    "curriculum": "From Week 18 Day 1 part time lesson plan section 11"
                },
                {
                    "number": 13,
                    "description": "ObjectId is stored in the _id field and acts as primary key",
                    "curriculum": "From Week 18 Day 1 part time lesson plan activity 01-Create-insert-and-Find"
                },
                {
                    "number": 14,
                    "description": "Query results are ordered using the sort method",
                    "curriculum": "From Week 18 Day 2 part time lesson plan section 7"
                },
                {
                    "number": 15,
                    "description": "The database URL and collection names are needed to connect",
                    "curriculum": "From Week 18 Day 2 part time lesson plan section 9"
                },
                {
                    "number": 16,
                    "description": "Allows for defining models for Mongo data",
                    "curriculum": "From Week 18 Day 3 part time lesson plan section 3"
                },
                {
                    "number": 17,
                    "description": "By default Mongoose uses callback functions, but this can be switched to Promises for cleaner code",
                    "curriculum": "From Week 18 Day 3 part time lesson plan section 5"
                },
                {
                    "number": 18,
                    "description": "Data model is created using the Mongoose Schema constructor",
                    "curriculum": "From Week 18 Day 3 part time lesson plan section 5 and activity 14-SchemaExample"
                },
                {
                    "number": 19,
                    "description": "The populate Mongoose method permits joining collections",
                    "curriculum": "From Week 18 Day 3 part time lesson plan section 3"
                }
            ]
        }
    },
    {
        "checkpoint": 10,
        "welcome": "Welcome to checkpoint 10",
        "quiz": {
            "title": "ES6 and React - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "ES6/ES2015 is the sixth major release of ECMAScript which is commonly known as JavaScript.",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 1"
                },
                {
                    "number": 2,
                    "description": "```var``` functionally scoped, vs ```let``` and ```const``` block scoped",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 3 and 4"
                },
                {
                    "number": 3,
                    "description": "```var``` functional scope example",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 3"
                },
                {
                    "number": 4,
                    "description": "```let``` block scope example",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 6"
                },
                {
                    "number": 5,
                    "description": "A string or number declared with ```const``` cannot have its value changed, but those declared with ```let``` can",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 4"
                },
                {
                    "number": 6,
                    "description": "An array or object type declared with ```const``` can have its value be changed but cannot be reassigned. Those declared with ```let``` can have their value changed or reassigned.",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 4"
                },
                {
                    "number": 7,
                    "description": "Template literal syntax",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 11"
                },
                {
                    "number": 8,
                    "description": "When defining object properties with ES6, if the object's key and value have the same name, we can omit the colon",
                    "curriculum": "From Week 19 Day 3 part time lesson plan section 14"
                },
                {
                    "number": 9,
                    "description": "startsWith(), endsWith(), and includes() are new ES6 string methods",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 11"
                },
                {
                    "number": 10,
                    "description": "map() method example creating a new array with results of calling a provided function on every element in the calling array",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 14"
                },
                {
                    "number": 11,
                    "description": "filter() is an array method that creates a new array with elements that pass the test of a provided function",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 14"
                },
                {
                    "number": 12,
                    "description": "Arrow function syntax",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 15"
                },
                {
                    "number": 13,
                    "description": "Arrow functions lexically bind this to their enclosing content",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 15"
                },
                {
                    "number": 14,
                    "description": "Using destructuring to get property names from objects into new variables",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 18"
                },
                {
                    "number": 15,
                    "description": "Babel is a transpiling tool for converting newer unsupported JS to JS that can be understood by the browser",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 22"
                },
                {
                    "number": 16,
                    "description": "ES2015 module files can have multiple named exports but only one default export",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 25"
                },
                {
                    "number": 17,
                    "description": "Initializing a new object from a class",
                    "curriculum": "From Week 19 Day 1 part time lesson plan section 28"
                },
                {
                    "number": 18,
                    "description": "yarn is an open source JS package manager alternative to npm",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 3"
                },
                {
                    "number": 19,
                    "description": "Use React on front end, server side, or native apps",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 3"
                },
                {
                    "number": 20,
                    "description": "JSX is a syntax extension to JS that looks like HTML",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 3"
                },
                {
                    "number": 21,
                    "description": "After scaffolding a new app, start it in developer mode with `yarn start`",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 4"
                },
                {
                    "number": 22,
                    "description": "Execution begins with index.js file in the src folder",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 4"
                },
                {
                    "number": 23,
                    "description": "Link external CDNs to index.html and place static assets in public folder",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 4 and 10"
                },
                {
                    "number": 24,
                    "description": "Components should be placed in the src folder",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 4"
                },
                {
                    "number": 25,
                    "description": "React library must be imported whenever using JSX in JS",
                    "curriculum": "From Week 19 Day 2 part time lesson plan Activity 2"
                },
                {
                    "number": 26,
                    "description": "Second argument to ReactDOM.render is the real DOM location where app will be rendered",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 8"
                },
                {
                    "number": 27,
                    "description": "Normally when rendering multiple JSX components they should be enclosed with a parent element",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 8"
                },
                {
                    "number": 28,
                    "description": "Since class is a reserved word in JS, HTML classes are referred to with className in JSX",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 10"
                },
                {
                    "number": 29,
                    "description": "Self-closing JSX elements must be closed with a forward slash",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 12"
                },
                {
                    "number": 30,
                    "description": "Inside JSX, comments can be placed inside curly braces using JS multi-line comment syntax",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 13"
                },
                {
                    "number": 31,
                    "description": "JS expressions can be placed within curly braces and evaluated inside JSX code",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 13"
                },
                {
                    "number": 32,
                    "description": "Component's styles can be defined inside a CSS stylesheet, or with inline styles, or a mix of both",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 16"
                },
                {
                    "number": 33,
                    "description": "JSX Style Property must be an object",
                    "curriculum": "From Week 19 Day 2 part time lesson plan section 17"
                },
                {
                    "number": 34,
                    "description": "Props can be passed into a component by setting an attribute to the rendered component's tag, or passing an expression between the component's tags",
                    "curriculum": "From Week 19 Day 3 part time lesson plan section 2"
                },
                {
                    "number": 35,
                    "description": "Data types that can be passed as props include strings, numbers, functions, arrays, even entire components",
                    "curriculum": "From Week 19 Day 3 part time lesson plan section 2"
                },
                {
                    "number": 36,
                    "description": "In React apps, data flows unidirectionally from parent to child",
                    "curriculum": "From Week 19 Day 3 part time lesson plan section 2"
                },
                {
                    "number": 37,
                    "description": "When importing a component folder instead of a file, the folder's index.js file is imported by default if it exists",
                    "curriculum": "From Week 19 Day 3 part time lesson plan section 6"
                },
                {
                    "number": 38,
                    "description": "We can use state to associate data with our components and keep track of any values we want to update the UI when changed",
                    "curriculum": "From Week 19 Day 3 part time lesson plan section 9"
                },
                {
                    "number": 39,
                    "description": "Using the setState method to update component data causes the component to re-render itself and all its children with the new data",
                    "curriculum": "From Week 19 Day 3 part time lesson plan section 9"
                },
                {
                    "number": 40,
                    "description": "onClick, onSubmit, onChange are common React event names",
                    "curriculum": "From Week 19 Day 3 part time lesson plan section 9"
                },
                {
                    "number": 41,
                    "description": "Child components can update their parent's state by passing them a method created in the parent",
                    "curriculum": "From Week 19 Day 3 part time lesson plan section 11"
                },
                {
                    "number": 42,
                    "description": "The render() method in React returns the JSX that a component should render, and must be included in every class component",
                    "curriculum": "From Week 19 Day 3 part time lesson plan section 9"
                },
                {
                    "number": 43,
                    "description": "The componentDidMount() method is a component lifecycle event in React that automatically runs once after the component is rendered for the first time",
                    "curriculum": "From Week 20 Day 1 Part time lesson plan section 3"
                },
                {
                    "number": 44,
                    "description": "Most components should be stateless and concerned with presentation. Few components should be stateful and concerned with business logic and control of presentational components",
                    "curriculum": "From Week 20 Day 1 part time lesson plan section 5"
                },
                {
                    "number": 45,
                    "description": "Ternary expressions can be used inside JSX curly braces for simple conditional logic",
                    "curriculum": "From Week 20 Day 1 part time lesson plan section 6"
                }
            ]
        }
    },
    {
        "checkpoint": 11,
        "welcome": "Welcome to checkpoint 11",
        "quiz": {
            "title": "Computer Science - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "An algorithm is a set of steps to solve a problem or perform a calculation",
                    "curriculum": "From Week 22 Day 1 part time lession plan section 3"
                },
                {
                    "number": 2,
                    "description": "Starting with a list then sequentially checking every item in the list for a search term is also known as a linear search",
                    "curriculum": "From Week 22 Day 1 part time lessson plan section 5"
                },
                {
                    "number": 3,
                    "description": "Starting with a sorted list then repeatedly halving the list to the portion that could contain the search term is a binary search",
                    "curriculum": "From Week 22 Day 1 part time lesson plan section 11"
                },
                {
                    "number": 4,
                    "description": "In a linear search, doubling the length of an input array being searched causes a doubling of the time required to complete the search",
                    "curriculum": "From Week 22 Day 1 part time lessson plan section 5"
                },
                {
                    "number": 5,
                    "description": "Repeatedly scanning through a list of numbers, finding the smallest number, and moving it into its position in an array is an example of a selection sort",
                    "curriculum": "From Week 22 Day 2 part time lesson plan section 4"
                },
                {
                    "number": 6,
                    "description": "Looping over a list, comparing two numbers at a time, swapping them if the first is more than the second, repeating until current number is less than the next number, or until reaching the end of the list, is an example of an insertion sort",
                    "curriculum": "From Week 22 Day 2 part time lesson plan section 9"
                },
                {
                    "number": 7,
                    "description": "A quick sort works with selecting a pivot, partitioning around the pivot, then repeating with each partition and new pivot until partitions with just one number remain",
                    "curriculum": "From Week 22 Day 2 part time lesson plan section 12"
                },
                {
                    "number": 8,
                    "description": "Time complexity refers to the rate at which an algorithm slows as input grows, when talking about algorithm efficiency",
                    "curriculum": "From Week 22 Day 3 part time lesson plan slideshow"
                },
                {
                    "number": 9,
                    "description": "An algorithm takes twice as long to run when input size is doubled. This is O(n) in Big-O notation.",
                    "curriculum": "From Week 22 Day 3 part time lesson plan slideshow"
                },
                {
                    "number": 10,
                    "description": "Efficiency for an algorithm with two nested for loops is O(n^2)",
                    "curriculum": "From Week 22 Day 3 part time lesson plan slideshow"
                },
                {
                    "number": 11,
                    "description": "A data structure is a way of storing data so that it can be used efficiently by the computer or browser",
                    "curriculum": "From Week 22 Day 3 part time lesson plan slideshow"
                },
                {
                    "number": 12,
                    "description": "Stacks are sequenced orders of numbers that only allow access to the top element (LIFO)",
                    "curriculum": "From Week 22 Day 3 part time lesson plan slideshow"
                },
                {
                    "number": 13,
                    "description": "Queues are sequenced orders of numbers that only allow access to the top element (FIFO)",
                    "curriculum": "From Week 22 Day 3 part time lesson plan slideshow"
                },
                {
                    "number": 14,
                    "description": "Linked lists are data structures in which each element of the list is sequentially joined to the next element",
                    "curriculum": "From Week 22 Day 3 part time lesson plan slideshow"
                },
                {
                    "number": 15,
                    "description": "Dictionaries are hybrid data structures that can be iterated over like arrays and have key-value pairs like objects",
                    "curriculum": "From Week 22 Day 3 part time lesson plan slideshow"
                },
                {
                    "number": 16,
                    "description": "Trees are non-sequential data structures made of parent-child relationships, with internal and external nodes having ancestors and descendents.",
                    "curriculum": "From Week 22 Day 3 part time lesson plan slideshow"
                }
            ]
        }
    },
    {
        "checkpoint": 12,
        "welcome": "Welcome to checkpoint 12",
        "quiz": {
            "title": "Java - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "As a compiled language, before executing, Java source code must be converted to byte code.",
                    "curriculum": "From Week 21 part time lesson plan Java day 1 section 2"
                },
                {
                    "number": 2,
                    "description": "A file called ConsoleIO.java in a package named com.bootcomp.console would need to have the folder structure com/bootcamp/console/ConsoleIO.java",
                    "curriculum": "From Week 21 part time lesson plan Java day 1 section 2"
                },
                {
                    "number": 3,
                    "description": "Java looks for the main function as the entry point to the app",
                    "curriculum": "From Week 21 part time lesson plan Java day 1 section 2"
                },
                {
                    "number": 4,
                    "description": "The double data type can be used to store decimals",
                    "curriculum": "From Week 21 part time lesson plan Java day 1 section 2"
                },
                {
                    "number": 5,
                    "description": "One array can only hold data of one type",
                    "curriculum": "From Week 21 part time lesson plan Java day 1 section 5"
                },
                {
                    "number": 6,
                    "description": "Unlike Arrays, the ArrayList data type doesn't import a length constraint",
                    "curriculum": "From Week 21 part time lesson plan Java day 1 section 5"
                },
                {
                    "number": 7,
                    "description": "The ```remove()``` method can be used to cut an item out of an ArrayList",
                    "curriculum": "From Week 21 part time lesson plan Java day 1 section 6"
                },
                {
                    "number": 8,
                    "description": "With HashMaps, the key's value is set with the ```put()``` method and retrieved with the ```get()``` method",
                    "curriculum": "From Week 21 part time lesson plan Java day 1 section 5"
                },
                {
                    "number": 9,
                    "description": "Classes are like blueprints, and objects are instantiated versions of the blueprint",
                    "curriculum": "From Week 21 part time lesson plan Java day 1 section 12"
                },
                {
                    "number": 10,
                    "description": "Private methods can only be used inside a class while public methods can be used by anyone",
                    "curriculum": "From Week 21 part time lesson plan Java day 1 section 12"
                },
                {
                    "number": 11,
                    "description": "Classes that inherit from other classes are called subclasses, and are created using the ```extends``` keyword",
                    "curriculum": "From Week 21 part time lesson plan Java day 2 section 4"
                },
                {
                    "number": 12,
                    "description": "The ability of an object to take on many forms, through using superclasses to instantiate subclasses, is known as polymorphism",
                    "curriculum": "From Week 21 part time lesson plan Java day 2 section 4"
                },
                {
                    "number": 13,
                    "description": "Unlike fields declared as private, those declared as protected are available to subclasses",
                    "curriculum": "From Week 21 part time lesson plan Java day 2 section 6"
                },
                {
                    "number": 14,
                    "description": "Java has a tool called an interface that allows for only defining what behaviors a subclass should have, without providing any implementation",
                    "curriculum": "From Week 21 part time lesson plan Java day 2 section 8"
                }
            ]
        }
    },
    {
        "checkpoint": 13,
        "welcome": "Welcome to checkpoint 13",
        "quiz": {
            "title": "Laravel/PHP - Multiple Choice Readme",
            "questions": [
                {
                    "number": 1,
                    "description": "PHP can be used for various back end tasks on the server, but cannot be run natively in a browser",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 1 section 2"
                },
                {
                    "number": 2,
                    "description": "PHP files always begin with `<?php`",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 1 section 3"
                },
                {
                    "number": 3,
                    "description": "Print out a variable's value with ```echo \"$name\";```",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 1 section 3"
                },
                {
                    "number": 4,
                    "description": "Associative arrays are analagous to objects in JavaScript",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 1 section 8"
                },
                {
                    "number": 5,
                    "description": "Must create classes first then instantiate them to get objects",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 1 section 15"
                },
                {
                    "number": 6,
                    "description": "Public properties and methods are available to anyone who creates an object, while private are available to the object itsef",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 1 section 15"
                },
                {
                    "number": 7,
                    "description": "Objects are instantiated from classes with the `new` keyword",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 1 section 15"
                },
                {
                    "number": 8,
                    "description": "Superglobals are built in variables available in all scopes",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 1 section 19"
                },
                {
                    "number": 9,
                    "description": "It is a PHP Framework to ease common tasks like authentication, routing, sessions management, etc.",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 2 section 1"
                },
                {
                    "number": 10,
                    "description": "Composer is a dependency manager for PHP projects, like NPM for node",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 2 section 2"
                },
                {
                    "number": 11,
                    "description": "Laravel projects use a MVC design pattern",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 2"
                },
                {
                    "number": 12,
                    "description": "In Laravel projects, migration is a way to tell the databse that it is being updated with a new model",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 2 section 16"
                },
                {
                    "number": 13,
                    "description": "Blade is a templating engine that comes with Laravel",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 2 section 6"
                },
                {
                    "number": 14,
                    "description": "Laravel determins which controller method to call based on the HTTP method used to send the request and the URL to which the request data is sent",
                    "curriculum": "From Week 20 part time lesson plan Laravel/PHP day 3 section 1"
                }
            ]
        }
    }
]